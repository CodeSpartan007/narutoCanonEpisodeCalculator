import java.util.*;

public class CanonEpisodeCalculator {
    private static final int TOTAL_EPISODES = 500;
    private static final String FILLER_RANGES = "57-71, 91-112, 144-151, 170-171, 176-196, 223-242, 257-260, 271, 279-281, 284-295, 303-320, 347-361, 376-377, 388-390, 394-413, 416-417, 422-423, 427-450, 464-468, 480-483";
    
    private Set<Integer> fillerEpisodes;
    private int totalCanonEpisodes;
    
    public CanonEpisodeCalculator() {
        this.fillerEpisodes = parseFillerEpisodes(FILLER_RANGES);
        this.totalCanonEpisodes = TOTAL_EPISODES - fillerEpisodes.size();
    }
    
    private Set<Integer> parseFillerEpisodes(String ranges) {
        Set<Integer> episodes = new HashSet<>();
        String[] rangeParts = ranges.split(",");
        
        for (String part : rangeParts) {
            part = part.trim();
            if (part.contains("-")) {
                // Handle range like "57-71"
                String[] range = part.split("-");
                int start = Integer.parseInt(range[0].trim());
                int end = Integer.parseInt(range[1].trim());
                for (int i = start; i <= end; i++) {
                    episodes.add(i);
                }
            } else {
                // Handle single episode like "271"
                episodes.add(Integer.parseInt(part));
            }
        }
        
        return episodes;
    }
    
    public double calculateCanonPercentage(int watchedUpTo) {
        if (watchedUpTo < 1 || watchedUpTo > TOTAL_EPISODES) {
            throw new IllegalArgumentException("Episode number must be between 1 and " + TOTAL_EPISODES);
        }
        
        int canonEpisodesWatched = 0;
        
        // Count canon episodes from 1 to watchedUpTo
        for (int i = 1; i <= watchedUpTo; i++) {
            if (!fillerEpisodes.contains(i)) {
                canonEpisodesWatched++;
            }
        }
        
        return (double) canonEpisodesWatched / totalCanonEpisodes * 100.0;
    }
    
    public void printStatistics(int watchedUpTo) {
        if (watchedUpTo < 1 || watchedUpTo > TOTAL_EPISODES) {
            System.out.println("Invalid episode number. Please enter a number between 1 and " + TOTAL_EPISODES);
            return;
        }
        
        int canonEpisodesWatched = 0;
        int fillerEpisodesWatched = 0;
        
        for (int i = 1; i <= watchedUpTo; i++) {
            if (fillerEpisodes.contains(i)) {
                fillerEpisodesWatched++;
            } else {
                canonEpisodesWatched++;
            }
        }
        
        double canonPercentage = calculateCanonPercentage(watchedUpTo);
        double overallProgress = (double) watchedUpTo / TOTAL_EPISODES * 100.0;
        
        System.out.println("=== Episode Progress Statistics ===");
        System.out.println("Episodes watched: " + watchedUpTo + "/" + TOTAL_EPISODES + 
                          " (" + String.format("%.1f", overallProgress) + "% of total series)");
        System.out.println("Canon episodes watched: " + canonEpisodesWatched + "/" + totalCanonEpisodes);
        System.out.println("Filler episodes watched: " + fillerEpisodesWatched + "/" + fillerEpisodes.size());
        System.out.println("Canon progress: " + String.format("%.2f", canonPercentage) + "%");
        
        if (watchedUpTo < TOTAL_EPISODES) {
            boolean nextIsCanon = !fillerEpisodes.contains(watchedUpTo + 1);
            System.out.println("Next episode (" + (watchedUpTo + 1) + ") is: " + 
                              (nextIsCanon ? "Canon" : "Filler"));
        }
    }
    
    public static void main(String[] args) {
        CanonEpisodeCalculator calculator = new CanonEpisodeCalculator();
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Canon Episode Progress Calculator");
        System.out.println("Total episodes: " + TOTAL_EPISODES);
        System.out.println("Total canon episodes: " + calculator.totalCanonEpisodes);
        System.out.println("Total filler episodes: " + calculator.fillerEpisodes.size());
        System.out.println();
        
        while (true) {
            System.out.print("Enter the episode number you've watched up to (1-" + TOTAL_EPISODES + "), or 'quit' to exit: ");
            String input = scanner.nextLine().trim();
            
            if (input.equalsIgnoreCase("quit")) {
                System.out.println("Goodbye!");
                break;
            }
            
            try {
                int episodeNumber = Integer.parseInt(input);
                calculator.printStatistics(episodeNumber);
                System.out.println();
            } catch (NumberFormatException e) {
                System.out.println("Please enter a valid number or 'quit'.");
            } catch (IllegalArgumentException e) {
                System.out.println(e.getMessage());
            }
        }
        
        scanner.close();
    }
}
